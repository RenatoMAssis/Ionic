/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from './app.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/element';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from 'ionic-angular/platform/platform';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from '../node_modules/ionic-angular/components/menu/menu.ngfactory';
import * as import12 from '@angular/core/src/linker/query_list';
import * as import13 from '../node_modules/ionic-angular/components/content/content.ngfactory';
import * as import14 from '../node_modules/ionic-angular/components/list/list.ngfactory';
import * as import15 from '../node_modules/ionic-angular/components/item/item.ngfactory';
import * as import16 from '../node_modules/ionic-angular/components/menu/menu-close.ngfactory';
import * as import17 from '../node_modules/ionic-angular/components/nav/nav.ngfactory';
import * as import18 from 'ionic-angular/components/menu/menu-controller';
import * as import19 from '@angular/core/src/linker/element_ref';
import * as import20 from 'ionic-angular/config/config';
import * as import21 from 'ionic-angular/util/keyboard';
import * as import22 from '@angular/core/src/zone/ng_zone';
import * as import23 from 'ionic-angular/gestures/gesture-controller';
import * as import24 from 'ionic-angular/components/app/app';
import * as import25 from 'ionic-angular/navigation/view-controller';
import * as import26 from 'ionic-angular/components/tabs/tabs';
import * as import27 from 'ionic-angular/util/form';
import * as import28 from 'ionic-angular/navigation/nav-controller-base';
import * as import29 from '@angular/core/src/linker/component_factory_resolver';
import * as import30 from 'ionic-angular/transitions/transition-controller';
import * as import31 from 'ionic-angular/navigation/deep-linker';
import * as import32 from 'ionic-angular/components/item/item';
import * as import33 from 'ionic-angular/components/menu/menu-close';
import * as import34 from 'ionic-angular/components/list/list';
import * as import35 from 'ionic-angular/components/content/content';
import * as import36 from 'ionic-angular/components/menu/menu';
import * as import37 from 'ionic-angular/components/nav/nav';
export class Wrapper_MyApp {
  context:import0.MyApp;
  changed:boolean;
  constructor(p0:any) {
    this.changed = false;
    this.context = new import0.MyApp(p0);
  }
  detectChangesInternal(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
var renderType_MyApp_Host:import2.RenderComponentType = (null as any);
class _View_MyApp_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import3.AppElement;
  _MyApp_0_4:Wrapper_MyApp;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement) {
    super(_View_MyApp_Host0,renderType_MyApp_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import3.AppElement {
    this._el_0 = this.selectOrCreateHostElement('ng-component',rootSelector,(null as any));
    this._appEl_0 = new import3.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_MyApp0(this.viewUtils,this.injector(0),this._appEl_0);
    this._MyApp_0_4 = new Wrapper_MyApp(this.parentInjector.get(import8.Platform));
    this._appEl_0.initComponent(this._MyApp_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._MyApp_0_4.context,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.MyApp) && (0 === requestNodeIndex))) { return this._MyApp_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._MyApp_0_4.detectChangesInternal(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_MyApp_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement):import1.AppView<any> {
  if ((renderType_MyApp_Host === (null as any))) { (renderType_MyApp_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_MyApp_Host0(viewUtils,parentInjector,declarationEl);
}
export const MyAppNgFactory:import10.ComponentFactory<import0.MyApp> = new import10.ComponentFactory<import0.MyApp>('ng-component',viewFactory_MyApp_Host0,import0.MyApp);
const styles_MyApp:any[] = ([] as any[]);
var renderType_MyApp:import2.RenderComponentType = (null as any);
class _View_MyApp0 extends import1.AppView<import0.MyApp> {
  _el_0:any;
  /*private*/ _appEl_0:import3.AppElement;
  _Menu_0_4:import11.Wrapper_Menu;
  _query_Content_0_0:import12.QueryList<any>;
  _text_1:any;
  _el_2:any;
  /*private*/ _appEl_2:import3.AppElement;
  _Content_2_4:import13.Wrapper_Content;
  _text_3:any;
  _el_4:any;
  _List_4_3:import14.Wrapper_List;
  _text_5:any;
  _el_6:any;
  /*private*/ _appEl_6:import3.AppElement;
  _Item_6_4:import15.Wrapper_Item;
  _ItemContent_6_5:import15.Wrapper_ItemContent;
  _MenuClose_6_6:import16.Wrapper_MenuClose;
  _query_Label_6_0:import12.QueryList<any>;
  _query_Button_6_1:import12.QueryList<any>;
  _query_Icon_6_2:import12.QueryList<any>;
  _text_7:any;
  _text_8:any;
  _text_9:any;
  _text_10:any;
  _text_11:any;
  _el_12:any;
  /*private*/ _appEl_12:import3.AppElement;
  _Nav_12_4:import17.Wrapper_Nav;
  _text_13:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement) {
    super(_View_MyApp0,renderType_MyApp,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import3.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'ion-menu',(null as any));
    this.renderer.setElementAttribute(this._el_0,'role','navigation');
    this._appEl_0 = new import3.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = import11.viewFactory_Menu0(this.viewUtils,this.injector(0),this._appEl_0);
    this._Menu_0_4 = new import11.Wrapper_Menu(this.parentInjector.get(import18.MenuController),new import19.ElementRef(this._el_0),this.parentInjector.get(import20.Config),this.parentInjector.get(import8.Platform),this.renderer,this.parentInjector.get(import21.Keyboard),this.parentInjector.get(import22.NgZone),this.parentInjector.get(import23.GestureController));
    this._query_Content_0_0 = new import12.QueryList<any>();
    this._appEl_0.initComponent(this._Menu_0_4.context,([] as any[]),compView_0);
    this._text_1 = this.renderer.createText((null as any),'\n  ',(null as any));
    this._el_2 = this.renderer.createElement((null as any),'ion-content',(null as any));
    this._appEl_2 = new import3.AppElement(2,0,this,this._el_2);
    var compView_2:any = import13.viewFactory_Content0(this.viewUtils,this.injector(2),this._appEl_2);
    this._Content_2_4 = new import13.Wrapper_Content(this.parentInjector.get(import20.Config),new import19.ElementRef(this._el_2),this.renderer,this.parentInjector.get(import24.App),this.parentInjector.get(import21.Keyboard),this.parentInjector.get(import22.NgZone),this.parentInjector.get(import25.ViewController,(null as any)),this.parentInjector.get(import26.Tabs,(null as any)));
    this._appEl_2.initComponent(this._Content_2_4.context,([] as any[]),compView_2);
    this._text_3 = this.renderer.createText((null as any),'\n    ',(null as any));
    this._el_4 = this.renderer.createElement((null as any),'ion-list',(null as any));
    this._List_4_3 = new import14.Wrapper_List(this.parentInjector.get(import20.Config),new import19.ElementRef(this._el_4),this.renderer,this.parentInjector.get(import23.GestureController));
    this._text_5 = this.renderer.createText(this._el_4,'\n      ',(null as any));
    this._el_6 = this.renderer.createElement(this._el_4,'button',(null as any));
    this.renderer.setElementAttribute(this._el_6,'class','item item-block');
    this.renderer.setElementAttribute(this._el_6,'ion-item','');
    this.renderer.setElementAttribute(this._el_6,'menuClose','');
    this._appEl_6 = new import3.AppElement(6,4,this,this._el_6);
    var compView_6:any = import15.viewFactory_Item0(this.viewUtils,this.injector(6),this._appEl_6);
    this._Item_6_4 = new import15.Wrapper_Item(this.parentInjector.get(import27.Form),this.parentInjector.get(import20.Config),new import19.ElementRef(this._el_6),this.renderer);
    this._ItemContent_6_5 = new import15.Wrapper_ItemContent();
    this._MenuClose_6_6 = new import16.Wrapper_MenuClose(this.parentInjector.get(import18.MenuController));
    this._query_Label_6_0 = new import12.QueryList<any>();
    this._query_Button_6_1 = new import12.QueryList<any>();
    this._query_Icon_6_2 = new import12.QueryList<any>();
    this._appEl_6.initComponent(this._Item_6_4.context,([] as any[]),compView_6);
    this._text_7 = this.renderer.createText((null as any),'Home',(null as any));
    this._query_Label_6_0.reset(([] as any[]));
    this._Item_6_4.context.contentLabel = this._query_Label_6_0.first;
    compView_6.create(this._Item_6_4.context,[
      ([] as any[]),
      ([] as any[]),
      ([] as any[]).concat([this._text_7]),
      ([] as any[]),
      ([] as any[])
    ]
    ,(null as any));
    this._text_8 = this.renderer.createText(this._el_4,'\n    ',(null as any));
    this._text_9 = this.renderer.createText((null as any),'\n  ',(null as any));
    compView_2.create(this._Content_2_4.context,[
      ([] as any[]),
      ([] as any[]).concat([
        this._text_3,
        this._el_4,
        this._text_9
      ]
      ),
      ([] as any[])
    ]
    ,(null as any));
    this._text_10 = this.renderer.createText((null as any),'\n',(null as any));
    this._query_Content_0_0.reset([this._Content_2_4.context]);
    this._Menu_0_4.context.menuContent = this._query_Content_0_0.first;
      compView_0.create(this._Menu_0_4.context,[([] as any[]).concat([
        this._text_1,
        this._el_2,
        this._text_10
      ]
    )],(null as any));
    this._text_11 = this.renderer.createText(parentRenderNode,'\n\n',(null as any));
    this._el_12 = this.renderer.createElement(parentRenderNode,'ion-nav',(null as any));
    this._appEl_12 = new import3.AppElement(12,(null as any),this,this._el_12);
    var compView_12:any = import17.viewFactory_Nav0(this.viewUtils,this.injector(12),this._appEl_12);
    this._Nav_12_4 = new import17.Wrapper_Nav(this.parentInjector.get(import25.ViewController,(null as any)),this.parentInjector.get(import28.NavControllerBase,(null as any)),this.parentInjector.get(import24.App),this.parentInjector.get(import20.Config),this.parentInjector.get(import21.Keyboard),new import19.ElementRef(this._el_12),this.parentInjector.get(import22.NgZone),this.renderer,this.parentInjector.get(import29.ComponentFactoryResolver),this.parentInjector.get(import23.GestureController),this.parentInjector.get(import30.TransitionController),this.parentInjector.get(import31.DeepLinker,(null as any)));
    this._appEl_12.initComponent(this._Nav_12_4.context,([] as any[]),compView_12);
    compView_12.create(this._Nav_12_4.context,([] as any[]),(null as any));
    this._text_13 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._expr_1 = import7.UNINITIALIZED;
    var disposable_0:Function = this.renderer.listen(this._el_6,'click',this.eventHandler(this._handle_click_6_0.bind(this)));
    this.init(([] as any[]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._text_9,
      this._text_10,
      this._text_11,
      this._el_12,
      this._text_13
    ]
    ,[disposable_0],([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import32.Item) && ((6 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._Item_6_4.context; }
    if (((token === import32.ItemContent) && ((6 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._ItemContent_6_5.context; }
    if (((token === import33.MenuClose) && ((6 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._MenuClose_6_6.context; }
    if (((token === import34.List) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._List_4_3.context; }
    if (((token === import35.Content) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 9)))) { return this._Content_2_4.context; }
    if (((token === import36.Menu) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 10)))) { return this._Menu_0_4.context; }
    if (((token === import37.Nav) && (12 === requestNodeIndex))) { return this._Nav_12_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = this._Nav_12_4.context;
    this._Menu_0_4.check_content(currVal_0,throwOnChange,false);
    if (this._Menu_0_4.detectChangesInternal(this,this._el_0,throwOnChange)) { this._appEl_0.componentView.markAsCheckOnce(); }
    if (this._Content_2_4.detectChangesInternal(this,this._el_2,throwOnChange)) { this._appEl_2.componentView.markAsCheckOnce(); }
    this._List_4_3.detectChangesInternal(this,this._el_4,throwOnChange);
    if (this._Item_6_4.detectChangesInternal(this,this._el_6,throwOnChange)) { this._appEl_6.componentView.markAsCheckOnce(); }
    this._ItemContent_6_5.detectChangesInternal(this,this._el_6,throwOnChange);
    const currVal_3:any = '';
    this._MenuClose_6_6.check_menuClose(currVal_3,throwOnChange,false);
    this._MenuClose_6_6.detectChangesInternal(this,this._el_6,throwOnChange);
    const currVal_4:any = this.context.home;
    this._Nav_12_4.check_root(currVal_4,throwOnChange,false);
    this._Nav_12_4.detectChangesInternal(this,this._el_12,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    if (!throwOnChange) {
      if (this._query_Button_6_1.dirty) {
        this._query_Button_6_1.reset(([] as any[]));
        this._Item_6_4.context._buttons = this._query_Button_6_1;
        this._query_Button_6_1.notifyOnChanges();
      }
      if (this._query_Icon_6_2.dirty) {
        this._query_Icon_6_2.reset(([] as any[]));
        this._Item_6_4.context._icons = this._query_Icon_6_2;
        this._query_Icon_6_2.notifyOnChanges();
      }
      if ((this.numberOfChecks === 0)) { this._Item_6_4.context.ngAfterContentInit(); }
    }
    const currVal_1:any = this._Content_2_4.context._sbPadding;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementClass(this._el_2,'statusbar-padding',currVal_1);
      this._expr_1 = currVal_1;
    }
    this.detectViewChildrenChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._Nav_12_4.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this._Content_2_4.context.ngOnDestroy();
    this._Menu_0_4.context.ngOnDestroy();
  }
  private _handle_click_6_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._MenuClose_6_6.context.close()) !== false);
    return (true && pd_0);
  }
}
export function viewFactory_MyApp0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement):import1.AppView<import0.MyApp> {
  if ((renderType_MyApp === (null as any))) { (renderType_MyApp = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,styles_MyApp,{})); }
  return new _View_MyApp0(viewUtils,parentInjector,declarationEl);
}